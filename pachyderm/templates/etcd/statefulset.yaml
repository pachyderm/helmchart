{{- /*
SPDX-FileCopyrightText: Pachyderm, Inc. <info@pachyderm.com>
SPDX-License-Identifier: Apache-2.0
*/ -}}
{{- if le .Values.etcd.dynamicNodes 0.0 -}}
{{ fail "dynamicNodes must be > 0" }}
{{ end -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: etcd
    suite: pachyderm
  name: etcd
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.etcd.dynamicNodes }}
  selector:
    matchLabels:
      app: etcd
      suite: pachyderm
  serviceName: etcd-headless
  template:
    metadata:
      labels:
        app: etcd
        suite: pachyderm
        {{- if .Values.etcd.podLabels }}
        {{- toYaml .Values.etcd.podLabels | nindent 8 }}
        {{- end }}
      name: etcd
      namespace: {{ .Release.Namespace }}
    spec:
      {{-  if .Values.etcd.affinity }}
      affinity: {{ toYaml .Values.etcd.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret | quote }}
      {{- end }}
      containers:
      - args:
        - '"/usr/local/bin/etcd" "--listen-client-urls=http://0.0.0.0:2379" "--advertise-client-urls=http://0.0.0.0:2379"
          "--data-dir=/var/data/etcd" "--auto-compaction-retention=1" "--max-txn-ops=10000"
          "--max-request-bytes=52428800" "--quota-backend-bytes=8589934592" "--listen-peer-urls=http://0.0.0.0:2380"
          "--initial-cluster-token=pach-cluster" "--initial-advertise-peer-urls=http://${ETCD_NAME}.etcd-headless.${NAMESPACE}.svc.cluster.local:2380"
          "--initial-cluster={{ range $i, $e := until (.Values.etcd.dynamicNodes | int) }}etcd-{{$e}}=http://etcd-{{$e}}.etcd-headless.${NAMESPACE}.svc.cluster.local:2380{{ end }}"'
        command:
        - /bin/sh
        - -c
        env:
        - name: ETCD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.etcd.image.repository }}:{{ .Values.etcd.image.tag }}"
        imagePullPolicy: {{ .Values.etcd.image.pullPolicy }}
        name: etcd
        ports:
        - containerPort: 2379
          name: client-port
        - containerPort: 2380
          name: peer-port
        {{- if .Values.etcd.resources }}
        resources: {{ toYaml .Values.etcd.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /var/data/etcd
          name: etcd-storage
  volumeClaimTemplates:
  - metadata:
      labels:
        app: etcd
        suite: pachyderm
      name: etcd-storage
      namespace: {{ .Release.Namespace }}
    spec:
      {{- if or .Values.etcd.storageClass  (eq .Values.deployTarget "GOOGLE") (eq .Values.deployTarget "MICROSOFT") (eq .Values.deployTarget "AMAZON") }}
      storageClassName: {{ .Values.etcd.storageClass | default "etcd-storage-class" }}
      {{- end }}
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage:
              {{- if .Values.etcd.storageSize }} {{ .Values.etcd.storageSize }}
              {{- else if eq .Values.deployTarget "MICROSOFT" }} 256Gi # 1,100 IOPS https://azure.microsoft.com/en-us/pricing/details/managed-disks/
              {{- else if eq .Values.deployTarget "GOOGLE" }} 50Gi     # 1,500 IOPS https://cloud.google.com/compute/docs/disks/performance
              {{- else if eq .Values.deployTarget "AMAZON" }} 500Gi     # 1,500 IOPS https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html
              {{- else }} 10Gi  # Default
              {{- end }}
