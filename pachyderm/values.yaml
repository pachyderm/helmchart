dash:
  image:
    repository: pachyderm/dash
    tag: "0.5.57"
    pullPolicy: IfNotPresent
  # resources: {} TODO

pachd:
  image:
    repository: pachyderm/pachd
    tag: "1.12.4"
    pullPolicy: IfNotPresent
  resources: {}
    #limits:
    #  cpu: "1"
    #  memory: 2G
    #requests:
    #  cpu: "1"
    #  memory: 2G  
  logLevel: info
  metrics:
    enabled: true
    endpoint: ""
  noExposeDockerSocket: false
  numShards: 16
  blockCacheBytes: 1G
  authenticationDisabledForTesting: false
  exposeObjectAPI: false
  clusterDeploymentID: ""
  requireCriticalServersOnly: false
  ppsWorkerGRPCPort: 80
  storage:
    backend: "" # GOOGLE, AMAZON, MINIO, MICROSOFT, LOCAL
    google:
      googleBucket: ""
      googleCred: ""
      serviceAccountName: "" # For Workload Identity access to the bucket
    amazon:
      amazonRegion: ""
      amazonBucket: ""
      amazonID: ""
      amazonSecret: ""
      amazonToken: ""
      amazonVaultAddr: "" #TODO Add vault to secret
      amazon-vault-role: ""
      amazon-vault-token: ""
      amazonDistribution: ""
      customEndpoint: ""
      retries: "10"
      timeout: "5m"
      uploadACL: bucket-owner-full-control
      reverse: "true"
      partSize: "5242880"
      maxUploadParts: "10000"
      disableSSL: "false"
      logOptions: ""
      noVerifySSL: "false"
      iamRole: "" #TODO - ensure iam role wired up in all places
    microsoft:
      microsoftContainer: ""
      microsoftID: ""
      microsoftSecret: ""
    minio:
      minioBucket: ""
      minioEndpoint: ""
      minioID: ""
      minioSecret: ""
      minioSecure: ""
      minioSignature: ""
    uploadConcurrencyLimit: 100
    putFileConcurrencyLimit: 100
  service: #TODO How to handle selective ports for hub
    type: ClusterIP
    #apiGrpcPort:
    #  expose: true
    #  port: 30650
  serviceAccount:
    create: true
    name: pachyderm #TODO Set default in helpers / Wire up in templates
  workerServiceAccount:
    create: true
    name: pachyderm-worker #TODO Set default in helpers / Wire up in templates

worker:
  image:
    repository: pachyderm/worker
    tag: "1.12.4"

etcd:
  image:
    repository: pachyderm/etcd
    tag: "v3.3.5"
    pullPolicy: IfNotPresent
  storageSize: 10Gi    
  resources: {}
    #limits:
    #  cpu: "1"
    #  memory: 2G
    #requests:
    #  cpu: "1"
    #  memory: 2G    

imageCredentials: {}
#  registry: ""
#  username: ""
#  password: ""
#  email: ""
  
tls: #move under ingress? How to make work with cert-manager, maybe add tls option to pachctl create secret?
  crt:
  key:

rbac:
  create: true